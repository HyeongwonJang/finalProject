<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- MyBatis에서 namespace는 필수적으로 명시해야 함 -->
<mapper namespace="treatmentRecord">

 	<resultMap type="povo" id="povoRM">
 		<id column="Pet_Owner_no" property="petOwnerNo"/>
 		<id column="Pet_Owner_tel" property="petOwnerTel"/>
 		<id column="Pet_Owner_name" property="petOwnerName"/>
 		<id column="Pet_Owner_id" property="petOwnerId"/>
 		<id column="Pet_Owner_password" property="petOwnerPassword"/>
 		<id column="Pet_Owner_address" property="petOwnerAddress"/>
 		<collection property="petVO" ofType="pvo">
 			<id column="Pet_name" property="petName"/>
 			<id column="Pet_birthday" property="petBirthday"/>
 			<id column="Pet_gender" property="petGender"/>
 			<id column="Pet_note" property="petNote"/>
 			<id column="Animal_kind_name" property="animalKindName"/>
 		</collection>
 	</resultMap>

	<resultMap type="tvo" id="tvoRM">
		<id column="treatment_Record_No" property="treatmentRecordNo" />
		<result column="treatment_Hours" property="treatmentHours" />
		<result column="treatment_Content" property="treatmentContent" />
		<result column="pet_Weight" property="petWeight" />
		<result column="vet_tel" property="hospitalVO.vetList[0].vetTel" />
		<result column="vet_name" property="hospitalVO.vetList[0].vetLicenseVO.vetName"/>
		<result column="vet_license_no" property="hospitalVO.vetList[0].vetLicenseVO.vetLicenseNo" />
		<result column="Disease_name" property="diseaseVO.diseaseName" />
		<result column="Disease_symptom" property="diseaseVO.diseaseSymptom" />
	</resultMap>
	
	<select id="findAllTreatmentRecord"  parameterType="map" resultType="int"> 
		select count(*)
		from TREATMENT_RECORD t, DISEASE d
		where t.Disease_name = d.Disease_name
		and t.Pet_Owner_no = #{povo.petOwnerNo}
		and t.Pet_name = #{povo.petVO[0].petName}
		and t.Treatment_hours 
		between to_date(#{listVO.startDate}, 'YYYY-MM-DD') and to_date(#{listVO.endDate}, 'YYYY-MM-DD')
	</select>
	
	<select id="findTreatmentRecordByPage"  parameterType="map" resultMap="tvoRM">
		select Treatment_Record_no, Treatment_hours, Treatment_content,
				Disease_name, Disease_symptom
		from(
			select Treatment_Record_no, Treatment_hours, Treatment_content,
				Disease_name, Disease_symptom, ceil(rownum/5) as page from(
				select t.Treatment_Record_no, to_char(t.Treatment_hours, 'YYYY-MM-DD')
				as Treatment_hours,
				t.Treatment_content, t.Disease_name, d.Disease_symptom
				from TREATMENT_RECORD t, DISEASE d
				where t.Disease_name = d.Disease_name
				and t.Pet_Owner_no = #{povo.petOwnerNo}
				and t.Pet_name = #{povo.petVO[0].petName}
				and t.Treatment_hours
				between to_date(#{listVO.startDate}, 'YYYY-MM-DD') and to_date(#{listVO.endDate},
				'YYYY-MM-DD')
			order by t.Treatment_Record_no desc
			)
		) where page = #{listVO.page}
	</select>
</mapper>	