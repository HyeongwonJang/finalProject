<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- MyBatis에서 namespace는 필수적으로 명시해야 함 -->
<mapper namespace="treatmentRecord">
	<resultMap type="pvo" id="pvoRM">
		<id column="Pet_name" property="petName"/>
 		<result column="Pet_birthday" property="petBirthday"/>
 		<result column="Pet_gender" property="petGender"/>
 		<result column="Pet_note" property="petNote"/>
 		<result column="Animal_kind_name" property="animalKindName"/>
	</resultMap>
	
	<resultMap type="dvo" id="dvoRM">
		<id column="disease_name" property="diseaseName"></id>
		<result column="disease_symptom" property="diseaseSymptom"/>
	</resultMap>

	<resultMap type="tvo" id="tvoRM">
		<id column="treatment_Record_No" property="treatmentRecordNo" />
		<result column="treatment_Hours" property="treatmentHours" />
		<result column="treatment_Content" property="treatmentContent" />
		<result column="pet_weight" property="petWeight" />
		<result column="Disease_name" property="diseaseVO.diseaseName" />
		<result column="Disease_symptom" property="diseaseVO.diseaseSymptom" />
		<result column="Pet_Owner_name" property="petOwnerVO.petOwnerName"/>
		<result column="Pet_Owner_tel" property="petOwnerVO.petOwnerTel"/>
		<result column="hospital_name" property="hospitalVO.hospitalName"/>
		<result column="hospital_tel" property="hospitalVO.hospitalTel"/>
		<collection property="hospitalVO.vetList" ofType="vvo">
			<result column="vet_tel" property="vetTel" />
			<result column="vet_name" property="vetLicenseVO.vetName" />
		</collection>
	</resultMap>
	
	<!-- 진료기록 상세페이지 조회, 펫에 대한 정보
		  펫에 대한 정보를 resultMap으로 분류가 불가능하여
		  select문을 두 개로 나눈다
	 -->
	 <select id="findDetailPetRecordByTreatmentNo" resultMap="pvoRM" parameterType="int">
	 	select p.pet_name, p.pet_gender, p.Animal_kind_name
		from PET p, TREATMENT_RECORD t
		where t.pet_owner_no = p.pet_owner_no
		and t.pet_name = p.pet_name
		and Treatment_Record_no = #{value}
	 </select>
	
	<!-- 진료기록 상세페이지 조회, 진료기록의 번호로 조회한다 -->
	<select id="findDetailTreatmentRecordByTreatmentNo" resultMap="tvoRM" parameterType="int">
		select 
			t.Treatment_hours,
			t.Treatment_content,
			t.Disease_name,
			d.Disease_symptom,
			po.Pet_Owner_name,
			po.Pet_Owner_tel,
			t.pet_weight,
			vl.vet_name,
			h.hospital_name,
			h.hospital_tel
		from Treatment_Record t, PET_OWNER po, VET_LICENSE vl, VET v, HOSPITAL h, disease d
		where t.pet_owner_no = po.pet_owner_no
		and t.Disease_name = d.Disease_name
		and t.Vet_License_no = vl.Vet_License_no
		and vl.Vet_License_no = v.Vet_License_no
		and v.hospital_id = h.hospital_id
		and Treatment_Record_no = #{value}
	</select>
	
	<select id="findAllTreatmentRecord"  parameterType="map" resultType="int"> 
		select count(*)
		from TREATMENT_RECORD t, DISEASE d 
		where t.Disease_name = d.Disease_name 
		and t.Pet_Owner_no = #{povo.petOwnerNo}
		and t.Pet_name = #{povo.petVO[0].petName}
		and t.Treatment_hours 
		between to_date(#{listVO.startDate}, 'YYYY-MM-DD') and to_date(#{listVO.endDate}, 'YYYY-MM-DD')
	</select>
	
		<select id="findAllTreatmentRecordVetVer"  parameterType="map" resultType="int"> 
		select count(*)
		from TREATMENT_RECORD t, DISEASE d, PET_OWNER po 
		where t.Disease_name = d.Disease_name
		and t.Pet_Owner_no = po.Pet_Owner_no 
		and t.Pet_name = #{povo.petVO[0].petName}
		and t.Treatment_hours 
		between to_date(#{listVO.startDate}, 'YYYY-MM-DD') and to_date(#{listVO.endDate}, 'YYYY-MM-DD')
	</select>
	
	<select id="findTreatmentRecordByPage"  parameterType="map" resultMap="tvoRM">
		select Treatment_Record_no, Treatment_hours, Treatment_content,
				Disease_name, Disease_symptom
		from(
			select Treatment_Record_no, Treatment_hours, Treatment_content,
				Disease_name, Disease_symptom, ceil(rownum/5) as page from(
				select t.Treatment_Record_no, to_char(t.Treatment_hours, 'YYYY-MM-DD')
				as Treatment_hours,
				t.Treatment_content, t.Disease_name, d.Disease_symptom
				from TREATMENT_RECORD t, DISEASE d
				where t.Disease_name = d.Disease_name
				and t.Pet_Owner_no = #{povo.petOwnerNo}
				and t.Pet_name = #{povo.petVO[0].petName}
				and t.Treatment_hours
				between to_date(#{listVO.startDate}, 'YYYY-MM-DD') and to_date(#{listVO.endDate},
				'YYYY-MM-DD')
			order by t.Treatment_Record_no desc
			)
		) where page = #{listVO.page}
	</select>
	
		<select id="findTreatmentRecordVetVerByPage"  parameterType="map" resultMap="tvoRM">
		select Treatment_Record_no, Treatment_hours, Treatment_content,
				Disease_name, Disease_symptom, Pet_Owner_name 
		from(
			select Treatment_Record_no, Treatment_hours, Treatment_content, Pet_Owner_name, 
				Disease_name, Disease_symptom, ceil(rownum/5) as page from(
				select t.Treatment_Record_no, to_char(t.Treatment_hours, 'YYYY-MM-DD')
				as Treatment_hours,
				t.Treatment_content, t.Disease_name, d.Disease_symptom, po.Pet_Owner_name 
				from TREATMENT_RECORD t, DISEASE d, PET_OWNER po 
				where t.Disease_name = d.Disease_name
				and t.Pet_Owner_no = po.Pet_Owner_no 
				and t.Pet_name = #{povo.petVO[0].petName} 
				and po.Pet_Owner_tel = #{povo.petOwnerTel} 
				and t.Treatment_hours
				between to_date(#{listVO.startDate}, 'YYYY-MM-DD') and to_date(#{listVO.endDate},
				'YYYY-MM-DD')
			order by t.Treatment_Record_no desc
			)
		) where page = #{listVO.page}
	</select>
	
	<!-- 질병 테이블의 모든 정보 가져오기 -->
	<select id="allDiseaseList" resultMap="dvoRM">
		select disease_name 
		from disease
	</select>
	
	<!-- 수의사의 진료기록 등록 -->
	<insert id="registerTreatmentRecord"  parameterType="tvo">
	insert into Treatment_Record(Treatment_Record_no, Treatment_hours, Treatment_content, Pet_weight, Pet_Owner_no, Pet_name, Vet_License_no, Disease_name)
	values(Treatment_Record_no.nextval, sysdate, #{treatmentContent}, #{petWeight}, #{petOwnerVO.petOwnerNo}, #{petOwnerVO.petVO[0].petName}, #{hospitalVO.vetList[0].vetLicenseVO.vetLicenseNo},#{diseaseVO.diseaseName})
	</insert>
	
</mapper>	
